/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.Stock;

import controlador.ControladorPrincipal;
import java.awt.Color;
import javax.swing.JOptionPane;
import vista.frmPrincipal;

/**
 *
 * @author juanm
 */
public class ifrmStock extends javax.swing.JInternalFrame {

    ControladorPrincipal cp;
    frmPrincipal vp;
    boolean regis;
    String opcion;
    /**
     * Creates new form ifrmStock
     */
    public ifrmStock(ControladorPrincipal cp, frmPrincipal vp, boolean regis) {
        initComponents();
        this.cp = cp;
        this.vp = vp;
        this.regis = regis;
    }

        public void estadoInicial() {
        cmbTipo.setSelectedIndex(0);

        txtNombre.setText("");
        txtColor.setText("");
        txtContenido.setText("");
        txaDescripcion.setText("");
        btnModificar.setEnabled(false);
        btnModifExistencias.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(false);
        bloquearB();
        sprExistencias.setValue(0);
        sprExistenciasMin.setValue(0);
        txaUbicacion.setText("");

        bloquearProducto();
        bloquearExistencias();
    }

    public void bloquearB() {
        rdbgProductos.clearSelection();
        txtBuscarP.setText("");
        txtBuscarP.setEnabled(false);
        cmbMarcaB.setEnabled(false);
        cmbMarcaB.setSelectedIndex(0);
    }

    public void bloquearProducto() {
        txtNombre.setEnabled(false);
        txtNombre.setDisabledTextColor(Color.DARK_GRAY);
        txtColor.setEnabled(false);
        txtColor.setDisabledTextColor(Color.DARK_GRAY);
        txtContenido.setEnabled(false);
        txtContenido.setDisabledTextColor(Color.DARK_GRAY);

        cmbTipo.setEnabled(false);
        cmbMarca.setEnabled(false);
        cmbUnidadMedida.setEnabled(false);

        btnAgregarMarca.setEnabled(false);
        btnAgregarUnidadMedida.setEnabled(false);

        txaDescripcion.setEnabled(false);
        txaDescripcion.setDisabledTextColor(Color.DARK_GRAY);

    }

    public void habilitarProducto() {
        txtNombre.setEnabled(true);
        txtColor.setEnabled(true);
        txtContenido.setEnabled(true);

        cmbTipo.setEnabled(true);
        cmbMarca.setEnabled(true);
        cmbUnidadMedida.setEnabled(true);
        btnAgregarMarca.setEnabled(true);
        btnAgregarUnidadMedida.setEnabled(true);

        txaDescripcion.setEnabled(true);
    }

    public void bloquearExistencias() {
        sprExistencias.setEnabled(false);
        sprExistenciasMin.setEnabled(false);

        txaUbicacion.setEnabled(false);
        txaUbicacion.setDisabledTextColor(Color.DARK_GRAY);
    }

    public void habilitarExistencias() {
        sprExistencias.setEnabled(true);
        sprExistenciasMin.setEnabled(true);

        txaUbicacion.setEnabled(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdbgProductos = new javax.swing.ButtonGroup();
        pnlStock = new javax.swing.JPanel();
        rdbNombre = new javax.swing.JRadioButton();
        rdbMarca = new javax.swing.JRadioButton();
        txtBuscarP = new javax.swing.JTextField();
        btnBuscarP = new javax.swing.JButton();
        btnTodos = new javax.swing.JButton();
        scpStock = new javax.swing.JScrollPane();
        tblStock = new javax.swing.JTable();
        cmbMarcaB = new javax.swing.JComboBox<>();
        pnlProducto = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblDescripcion = new javax.swing.JLabel();
        scpDescripcion = new javax.swing.JScrollPane();
        txaDescripcion = new javax.swing.JTextArea();
        lblColor = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        lblUnidadMedida = new javax.swing.JLabel();
        cmbUnidadMedida = new javax.swing.JComboBox<>();
        lblContenido = new javax.swing.JLabel();
        txtContenido = new javax.swing.JTextField();
        lblMarca = new javax.swing.JLabel();
        cmbMarca = new javax.swing.JComboBox<>();
        btnAgregarMarca = new javax.swing.JButton();
        lblTipo = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        btnAgregarUnidadMedida = new javax.swing.JButton();
        pnlControl2 = new javax.swing.JPanel();
        btnReporte2 = new javax.swing.JButton();
        btnModifExistencias2 = new javax.swing.JButton();
        btnNuevoProducto2 = new javax.swing.JButton();
        btnModificar2 = new javax.swing.JButton();
        btnEliminar2 = new javax.swing.JButton();
        btnGuardar2 = new javax.swing.JButton();
        pnlExistencias = new javax.swing.JPanel();
        lblExistencias = new javax.swing.JLabel();
        lblExistenciasMinimas = new javax.swing.JLabel();
        lblUbicacion = new javax.swing.JLabel();
        srpUbicacion = new javax.swing.JScrollPane();
        txaUbicacion = new javax.swing.JTextArea();
        sprExistencias = new javax.swing.JSpinner();
        sprExistenciasMin = new javax.swing.JSpinner();

        setClosable(true);
        setTitle("Stock");

        pnlStock.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lista de Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 16))); // NOI18N

        rdbNombre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rdbNombre.setText("Nombre");
        rdbNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdbNombreMouseClicked(evt);
            }
        });
        rdbNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbNombreActionPerformed(evt);
            }
        });

        rdbMarca.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        rdbMarca.setText("Marca");
        rdbMarca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdbMarcaMouseClicked(evt);
            }
        });
        rdbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMarcaActionPerformed(evt);
            }
        });

        txtBuscarP.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        btnBuscarP.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBuscarP.setText("Buscar");
        btnBuscarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPActionPerformed(evt);
            }
        });

        btnTodos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnTodos.setText("Todos");
        btnTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodosActionPerformed(evt);
            }
        });

        tblStock = new javax.swing.JTable(){
            public boolean isCellEditable(int r, int c){
                return false;
            }
        };
        tblStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Tipo", "Cantidad", "Cantidad Minima"
            }
        ));
        tblStock.getTableHeader().setReorderingAllowed(false);
        tblStock.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblStockAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStockMouseClicked(evt);
            }
        });
        scpStock.setViewportView(tblStock);

        cmbMarcaB.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbMarcaB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[SELECCIONAR]" }));
        cmbMarcaB.setEnabled(false);
        cmbMarcaB.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        javax.swing.GroupLayout pnlStockLayout = new javax.swing.GroupLayout(pnlStock);
        pnlStock.setLayout(pnlStockLayout);
        pnlStockLayout.setHorizontalGroup(
            pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scpStock, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                    .addGroup(pnlStockLayout.createSequentialGroup()
                        .addGroup(pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdbNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlStockLayout.createSequentialGroup()
                                .addComponent(rdbMarca)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlStockLayout.createSequentialGroup()
                                .addComponent(cmbMarcaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscarP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTodos)))))
                .addContainerGap())
        );
        pnlStockLayout.setVerticalGroup(
            pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbNombre)
                    .addComponent(rdbMarca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMarcaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpStock)
                .addContainerGap())
        );

        pnlProducto.setBackground(new java.awt.Color(255, 102, 51));
        pnlProducto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 16))); // NOI18N
        pnlProducto.setOpaque(false);

        lblNombre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblNombre.setText("Nombre*");

        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtNombre.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        lblDescripcion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblDescripcion.setText("Descripción");

        txaDescripcion.setColumns(10);
        txaDescripcion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txaDescripcion.setLineWrap(true);
        txaDescripcion.setRows(5);
        txaDescripcion.setMaximumSize(new java.awt.Dimension(500, 2147483647));
        scpDescripcion.setViewportView(txaDescripcion);

        lblColor.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblColor.setText("Color");

        txtColor.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtColor.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        lblUnidadMedida.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblUnidadMedida.setText("Unidad de Medida");

        cmbUnidadMedida.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbUnidadMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[SELECCIONAR]" }));
        cmbUnidadMedida.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        lblContenido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblContenido.setText("Contenido");

        txtContenido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtContenido.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        lblMarca.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblMarca.setText("Marca");

        cmbMarca.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[SELECCIONAR]" }));
        cmbMarca.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        btnAgregarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMarcaActionPerformed(evt);
            }
        });

        lblTipo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblTipo.setText("Tipo");

        cmbTipo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[SELECCIONAR]", "Auto Parte", "Pintura", "Pieza Mecánica", "Herramienta", "Otros" }));
        cmbTipo.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        btnAgregarUnidadMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarUnidadMedidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlProductoLayout = new javax.swing.GroupLayout(pnlProducto);
        pnlProducto.setLayout(pnlProductoLayout);
        pnlProductoLayout.setHorizontalGroup(
            pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scpDescripcion)
                    .addGroup(pnlProductoLayout.createSequentialGroup()
                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProductoLayout.createSequentialGroup()
                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDescripcion)
                                    .addGroup(pnlProductoLayout.createSequentialGroup()
                                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblMarca)
                                            .addGroup(pnlProductoLayout.createSequentialGroup()
                                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(cmbMarca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnAgregarMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(12, 12, 12)
                                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblContenido)
                                            .addComponent(txtContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblColor)
                                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlProductoLayout.createSequentialGroup()
                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUnidadMedida)
                                    .addGroup(pnlProductoLayout.createSequentialGroup()
                                        .addComponent(cmbUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAgregarUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTipo)
                                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
        );
        pnlProductoLayout.setVerticalGroup(
            pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProductoLayout.createSequentialGroup()
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUnidadMedida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProductoLayout.createSequentialGroup()
                                .addComponent(lblMarca)
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProductoLayout.createSequentialGroup()
                                .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAgregarMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(pnlProductoLayout.createSequentialGroup()
                        .addComponent(lblColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlProductoLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblTipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblContenido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lblDescripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlControl2.setBackground(new java.awt.Color(255, 102, 102));
        pnlControl2.setOpaque(false);

        btnReporte2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnReporte2.setText("Reporte");
        btnReporte2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporte2ActionPerformed(evt);
            }
        });

        btnModifExistencias2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnModifExistencias2.setText("Modificar  Existencias");
        btnModifExistencias2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifExistencias2ActionPerformed(evt);
            }
        });

        btnNuevoProducto2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnNuevoProducto2.setText("Nuevo Producto");
        btnNuevoProducto2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProducto2ActionPerformed(evt);
            }
        });

        btnModificar2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnModificar2.setText("Modificar Producto");
        btnModificar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificar2ActionPerformed(evt);
            }
        });

        btnEliminar2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnEliminar2.setText("Quitar");
        btnEliminar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar2ActionPerformed(evt);
            }
        });

        btnGuardar2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnGuardar2.setText("Guardar");
        btnGuardar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControl2Layout = new javax.swing.GroupLayout(pnlControl2);
        pnlControl2.setLayout(pnlControl2Layout);
        pnlControl2Layout.setHorizontalGroup(
            pnlControl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControl2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReporte2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevoProducto2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModifExistencias2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar2)
                .addContainerGap())
        );
        pnlControl2Layout.setVerticalGroup(
            pnlControl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControl2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoProducto2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReporte2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModificar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(btnEliminar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModifExistencias2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlExistencias.setBackground(new java.awt.Color(255, 102, 51));
        pnlExistencias.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Existencias", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 16))); // NOI18N
        pnlExistencias.setOpaque(false);

        lblExistencias.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblExistencias.setText("Existencias");

        lblExistenciasMinimas.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblExistenciasMinimas.setText("Existencias Minimas");

        lblUbicacion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblUbicacion.setText("Ubicación");

        txaUbicacion.setColumns(10);
        txaUbicacion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txaUbicacion.setLineWrap(true);
        txaUbicacion.setRows(5);
        txaUbicacion.setMaximumSize(new java.awt.Dimension(500, 2147483647));
        srpUbicacion.setViewportView(txaUbicacion);

        sprExistencias.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        sprExistenciasMin.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        javax.swing.GroupLayout pnlExistenciasLayout = new javax.swing.GroupLayout(pnlExistencias);
        pnlExistencias.setLayout(pnlExistenciasLayout);
        pnlExistenciasLayout.setHorizontalGroup(
            pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlExistenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlExistenciasLayout.createSequentialGroup()
                        .addComponent(lblUbicacion)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlExistenciasLayout.createSequentialGroup()
                        .addGroup(pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(srpUbicacion)
                            .addGroup(pnlExistenciasLayout.createSequentialGroup()
                                .addGroup(pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblExistencias)
                                    .addComponent(sprExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60)
                                .addGroup(pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlExistenciasLayout.createSequentialGroup()
                                        .addComponent(lblExistenciasMinimas)
                                        .addGap(23, 23, 23))
                                    .addComponent(sprExistenciasMin))))
                        .addContainerGap())))
        );
        pnlExistenciasLayout.setVerticalGroup(
            pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlExistenciasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExistencias)
                    .addComponent(lblExistenciasMinimas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlExistenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sprExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sprExistenciasMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUbicacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(srpUbicacion, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pnlStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlExistencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(pnlControl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlExistencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlControl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdbNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbNombreMouseClicked
        txtBuscarP.setEnabled(true);
        txtBuscarP.setText("");
        cmbMarcaB.setEnabled(false);
        cmbMarcaB.getModel().setSelectedItem("[SELECCIONAR]");
    }//GEN-LAST:event_rdbNombreMouseClicked

    private void rdbNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbNombreActionPerformed

    }//GEN-LAST:event_rdbNombreActionPerformed

    private void rdbMarcaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbMarcaMouseClicked
        txtBuscarP.setEnabled(false);
        txtBuscarP.setText("");
        cmbMarcaB.setEnabled(true);
    }//GEN-LAST:event_rdbMarcaMouseClicked

    private void rdbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMarcaActionPerformed

    }//GEN-LAST:event_rdbMarcaActionPerformed

    private void btnBuscarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPActionPerformed
        if (rdbgProductos.getSelection() == null) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione algún Método de Búsqueda");
            rdbNombre.requestFocus();
        } else {

            if (rdbNombre.isSelected()) {
                if (txtBuscarP.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "No hay parametro de busqueda");
                    txtBuscarP.requestFocus();
                } else {
                    //UtilVista.cargarTablaStock(cp.getCstock().buscarProductoPorNombre(txtBuscarP.getText()), tblStock);
                    bloquearProducto();
                    bloquearExistencias();
                }
            } else if (rdbMarca.isSelected()) {
                if (cmbMarcaB.getSelectedIndex() < 1) {
                    JOptionPane.showMessageDialog(rootPane, "No hay parámetro de búsqueda");
                    cmbMarcaB.requestFocus();
                } else {
                    //UtilVista.cargarTablaStock(cp.getCstock().buscarProductoPorMarca(String.valueOf(cmbMarcaB.getSelectedItem())), tblStock);
                    bloquearProducto();
                    bloquearExistencias();
                }
            }
        }
    }//GEN-LAST:event_btnBuscarPActionPerformed

    private void btnTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodosActionPerformed
        //UtilVista.cargarTablaStock(cp.getCstock().traerProductos(), tblStock);

        bloquearB();
    }//GEN-LAST:event_btnTodosActionPerformed

    private void tblStockAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblStockAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblStockAncestorAdded

    private void tblStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStockMouseClicked
        if (tblStock.getSelectedRow() > -1 && tblStock.getSelectedRowCount() == 1) {
            int seleccionado = (int) tblStock.getValueAt(tblStock.getSelectedRow(), 0);
            //  Producto producto = this.cp.getCstock().buscarProducto(seleccionado);
            /*
            if (producto != null) {
                txtNombre.setText(producto.getNombre());
                txtColor.setText(producto.getColor());
                txtContenido.setText(producto.getContenido());
                cmbUnidadMedida.getModel().setSelectedItem(producto.getUnidadDeMedida());
                cmbMarca.getModel().setSelectedItem(producto.getMarcaProducto());
                cmbTipo.getModel().setSelectedItem(producto.getTipo());
                txaDescripcion.setText(producto.getDescripcion());

                sprExistencias.setValue(producto.getStock().getCantidad());
                sprExistenciasMin.setValue(producto.getStock().getCantidadMin());
                txaUbicacion.setText(producto.getStock().getUbicacion());

                bloquearExistencias();
                bloquearProducto();

                btnModificar.setEnabled(true);
                btnModifExistencias.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnGuardar.setEnabled(false);
                opcion = null;
            } else {
                JOptionPane.showMessageDialog(null, "Error al traer los datos");
            }
            */
        }
    }//GEN-LAST:event_tblStockMouseClicked

    private void btnAgregarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMarcaActionPerformed
        jdialogMarcaProduc marca = new jdialogMarcaProduc(vp, true, cp, this, true);
        marca.show();
    }//GEN-LAST:event_btnAgregarMarcaActionPerformed

    private void btnAgregarUnidadMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarUnidadMedidaActionPerformed
        //jdialogUnidadMedida um = new jdialogUnidadMedida(vp, true, cp, this, true);
        //um.show();
    }//GEN-LAST:event_btnAgregarUnidadMedidaActionPerformed

    private void btnReporte2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporte2ActionPerformed

    }//GEN-LAST:event_btnReporte2ActionPerformed

    private void btnModifExistencias2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifExistencias2ActionPerformed
        opcion = "modificarExistencias";
        habilitarExistencias();
        btnGuardar.setEnabled(true);
        sprExistencias.requestFocus();
        bloquearProducto();
    }//GEN-LAST:event_btnModifExistencias2ActionPerformed

    private void btnNuevoProducto2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProducto2ActionPerformed
        estadoInicial();
        habilitarProducto();
        habilitarExistencias();
        txtNombre.requestFocus();
        btnGuardar.setEnabled(true);
        opcion = "nuevo";
    }//GEN-LAST:event_btnNuevoProducto2ActionPerformed

    private void btnModificar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificar2ActionPerformed
        opcion = "modificarProducto";
        habilitarProducto();
        btnGuardar.setEnabled(true);
        txtNombre.requestFocus();
        bloquearExistencias();
    }//GEN-LAST:event_btnModificar2ActionPerformed

    private void btnEliminar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar2ActionPerformed
        //        JPasswordField pass = new JPasswordField();
        //        Icon icono = new ImageIcon(getClass().getResource("/imagenes/iconos/clave.png"));
        //        int pnl = JOptionPane.showConfirmDialog(null, pass, "Clave de Seguridad", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, icono);
        //        if (pnl == 0) {
            //
            //            String password = String.valueOf(pass.getPassword());
            //            Taller taller = cp.getCl().traerTaller(1);
            //
            //            if (password.equals(taller.getClaveSeguridad())) {
                //                try {
                    //                    if (tblStock.getSelectedRow() > -1 && tblStock.getSelectedRowCount() == 1) {
                        //                        int seleccionado = (int) tblStock.getValueAt(tblStock.getSelectedRow(), 0);
                        //                        int seleccion = JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro que desea eliminar este Producto? (Se eliminaran el Stock relacionados)", "input", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                        //                        if (seleccion == JOptionPane.YES_OPTION) {
                            //                            cp.getCstock().borrarProducto(seleccionado);
                            //                            JOptionPane.showMessageDialog(rootPane, "El Producto y el Stock se eliminaron exitosamente");
                            //                            estadoInicial();
                            //                        }
                        //                    } else {
                        //                        JOptionPane.showMessageDialog(rootPane, "Seleccione un elemento de la Tabla");
                        //                    }
                    //                } catch (Exception e) {
                    //                    JOptionPane.showMessageDialog(null, e.getMessage());
                    //                }
                //            }
            //        }
        /*
        jdialogConfirmarClave confirmClave = new jdialogConfirmarClave(vp, closable, cp);
        confirmClave.show();

        boolean password = confirmClave.getClave();
        boolean cancel = confirmClave.getCancel();

        if (cancel != true) {
            if (password == true) {
                try {
                    if (tblStock.getSelectedRow() > -1 && tblStock.getSelectedRowCount() == 1) {
                        int seleccionado = (int) tblStock.getValueAt(tblStock.getSelectedRow(), 0);
                        int seleccion = JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro que desea eliminar este Producto? (Se eliminaran el Stock relacionados)", "input", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                        if (seleccion == JOptionPane.YES_OPTION) {
                            cp.getCstock().borrarProducto(seleccionado);
                            JOptionPane.showMessageDialog(rootPane, "El Producto y el Stock se eliminaron exitosamente");
                            estadoInicial();
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Seleccione un elemento de la Tabla");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }*/
    }//GEN-LAST:event_btnEliminar2ActionPerformed

    private void btnGuardar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar2ActionPerformed
        String nombre = txtNombre.getText();
        String color = txtColor.getText();
        String um = String.valueOf(cmbUnidadMedida.getSelectedItem());
        // UnidadDeMedida unidadMedida = cp.getCstock().buscarUnidadMedidaPorNombre(um);
        String mp = String.valueOf(cmbMarca.getSelectedItem());
        // MarcaProducto marcaProducto = cp.getCstock().buscarMarcaPorNombre(mp);
        String tipo = String.valueOf(cmbTipo.getSelectedItem());
        String contenido = txtContenido.getText();
        String descripcion = txaDescripcion.getText();

        int cantidad = (int) sprExistencias.getValue();
        int cantidadMin = (int) sprExistenciasMin.getValue();
        String ubicacion = txaUbicacion.getText();

        if (opcion.equals("nuevo")) {
            if (txtNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No puede haber campos vacíos");
                txtNombre.requestFocus();
            } else {
                if (sprExistencias.getValue().equals(0) || sprExistenciasMin.getValue().equals(0)) {
                    JOptionPane.showMessageDialog(null, "Agregue algunas existencias");
                } else {
                    try {
                        if (cantidad < 0 || cantidadMin < 0) {
                            JOptionPane.showMessageDialog(null, "Las cantidades no pueden ser Menores a 0");
                        } else {
                            /*
                            Stock stock = cp.getCstock().nuevoStock(cantidad, cantidadMin, ubicacion);

                            cp.getCstock().nuevoProducto(nombre, tipo, descripcion, contenido, color, stock, unidadMedida, marcaProducto);
                            UtilVista.cargarNotificaciones(cp.getCstock().traerProductos(), vp.lstNoticias);
                            JOptionPane.showMessageDialog(null, "El Producto se registró con éxito");
                            estadoInicial();
                            */
                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }

                }

            }
            if (regis == true) {
                this.dispose();
            }
        } else if (opcion.equals("modificarProducto")) {
            if (txtNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "No puede haber campos vacíos");
                txtNombre.requestFocus();
            } else {
                /*
                JPasswordField pass = new JPasswordField();
                Icon icono = new ImageIcon(getClass().getResource("/imagenes/iconos/clave.png"));
                int pnl = JOptionPane.showConfirmDialog(null, pass, "Clave de Seguridad", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, icono);
                if (pnl == 0) {
                    String password = String.valueOf(pass.getPassword());
                    Taller taller = cp.getCl().traerTaller(1);
                    */
                    //            jdialogConfirmarClave confirmClave = new jdialogConfirmarClave(vp, closable, cp);
                    //        confirmClave.show();

                    //      boolean password = confirmClave.getClave();
                    //    boolean cancel = confirmClave.getCancel();
                    /*
                    if (cancel != true) {
                        if (password == true) {
                            if (tblStock.getSelectedRow() > -1 && tblStock.getSelectedRowCount() == 1) {
                                int seleccionado = (int) tblStock.getValueAt(tblStock.getSelectedRow(), 0);
                                try {

                                    //                          cp.getCstock().editarProducto(seleccionado, nombre, tipo, descripcion, contenido, color, unidadMedida, marcaProducto);

                                    JOptionPane.showMessageDialog(null, "El Producto se modificó con éxito");
                                    estadoInicial();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, e.getMessage());
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La Clave de Seguridad es Incorrecta");
                        bloquearExistencias();
                        bloquearProducto();
                    }
                    */
                }
                if (regis == true) {
                    this.dispose();
                }
            } else if (opcion.equals("modificarExistencias")) {
                if (txtNombre.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "No puede haber campos vacíos");
                    txtNombre.requestFocus();
                } else {
                    /*
                    JPasswordField pass = new JPasswordField();
                    Icon icono = new ImageIcon(getClass().getResource("/imagenes/iconos/clave.png"));
                    int pnl = JOptionPane.showConfirmDialog(null, pass, "Clave de Seguridad", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, icono);
                    if (pnl == 0) {

                        String password = String.valueOf(pass.getPassword());
                        Taller taller = cp.getCl().traerTaller(1);

                        if (password.equals(taller.getClaveSeguridad())) {
                            */

                            if (cantidad < 0 || cantidadMin < 0) {
                                JOptionPane.showMessageDialog(null, "Las cantidades no pueden ser Menores a 0");
                            } else {

                                //                    jdialogConfirmarClave confirmClave = new jdialogConfirmarClave(vp, closable, cp);
                                //                  confirmClave.show();
                                //                boolean password = confirmClave.getClave();
                                //              boolean cancel = confirmClave.getCancel();

                                /*
                                if (cancel != true) {
                                    if (password == true) {
                                        if (tblStock.getSelectedRow() > -1 && tblStock.getSelectedRowCount() == 1) {
                                            int seleccionado = (int) tblStock.getValueAt(tblStock.getSelectedRow(), 0);

                                            Producto producto = this.cp.getCstock().buscarProducto(seleccionado);
                                            try {

                                                cp.getCstock().editarStock(producto, cantidad, cantidadMin, ubicacion);
                                                UtilVista.cargarNotificaciones(cp.getCstock().traerProductos(), vp.lstNoticias);
                                                JOptionPane.showMessageDialog(null, "El Stock se modificó con éxito");
                                                estadoInicial();

                                            } catch (Exception e) {
                                                JOptionPane.showMessageDialog(null, e.getMessage());

                                            }
                                        }
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "La Clave de Seguridad es Incorrecta");
                                    bloquearExistencias();
                                    bloquearProducto();
                                }
                                */
                            }
                            if (regis == true) {
                                this.dispose();
                            }
                        }

                    }
    }//GEN-LAST:event_btnGuardar2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarMarca;
    private javax.swing.JButton btnAgregarUnidadMedida;
    private javax.swing.JButton btnBuscarP;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnEliminar2;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnGuardar2;
    private javax.swing.JButton btnModifExistencias;
    private javax.swing.JButton btnModifExistencias1;
    private javax.swing.JButton btnModifExistencias2;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnModificar1;
    private javax.swing.JButton btnModificar2;
    private javax.swing.JButton btnNuevoProducto;
    private javax.swing.JButton btnNuevoProducto1;
    private javax.swing.JButton btnNuevoProducto2;
    private javax.swing.JButton btnReporte;
    private javax.swing.JButton btnReporte1;
    private javax.swing.JButton btnReporte2;
    private javax.swing.JButton btnTodos;
    public javax.swing.JComboBox<String> cmbMarca;
    public javax.swing.JComboBox<String> cmbMarcaB;
    private javax.swing.JComboBox<String> cmbTipo;
    public javax.swing.JComboBox<String> cmbUnidadMedida;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblContenido;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblExistencias;
    private javax.swing.JLabel lblExistenciasMinimas;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblUbicacion;
    private javax.swing.JLabel lblUnidadMedida;
    private javax.swing.JPanel pnlControl;
    private javax.swing.JPanel pnlControl1;
    private javax.swing.JPanel pnlControl2;
    private javax.swing.JPanel pnlExistencias;
    private javax.swing.JPanel pnlProducto;
    private javax.swing.JPanel pnlStock;
    private javax.swing.JRadioButton rdbMarca;
    private javax.swing.JRadioButton rdbNombre;
    private javax.swing.ButtonGroup rdbgProductos;
    private javax.swing.JScrollPane scpDescripcion;
    private javax.swing.JScrollPane scpStock;
    private javax.swing.JSpinner sprExistencias;
    private javax.swing.JSpinner sprExistenciasMin;
    private javax.swing.JScrollPane srpUbicacion;
    private javax.swing.JTable tblStock;
    private javax.swing.JTextArea txaDescripcion;
    private javax.swing.JTextArea txaUbicacion;
    private javax.swing.JTextField txtBuscarP;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtContenido;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
