/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.Stock;

import controlador.ControladorPrincipal;
import static java.awt.image.ImageObserver.HEIGHT;
import javax.swing.JOptionPane;
import modelo.UnidadDeMedida;
import vista.Maquinas.ifrmMaquinas;
import vista.UtilVista;

/**
 *
 * @author juanm
 */
public class jdialogUnidadMedida extends javax.swing.JDialog {

    ControladorPrincipal cp;
    String action;
    ifrmMaquinas formMaquina;

    /**
     * Creates new form jdialogUnidadMedida
     */
    public jdialogUnidadMedida(java.awt.Frame parent, boolean modal, ControladorPrincipal cp, ifrmMaquinas formMaquina, boolean select) {
        super(parent, modal);
        initComponents();
        this.cp = cp;
        this.formMaquina = formMaquina;
        setLocationRelativeTo(null);
        getRootPane().setDefaultButton(btnGuardar);
        btnSeleccionar.setVisible(select);
        initState();
    }

    public void initState() {
        UtilVista.cargarTablaUnidadDeMedida(cp.getCs().findAllUnidadDeMedida(), tblUnidMed);
        txtNombre.setEnabled(false);
        btnGuardar.setEnabled(false);
        BlockButtons();
    }

    public void unidMedAction(String accion) {

        if (accion == "new") {
            action = accion;
            btnNuevo.setEnabled(false);
            btnCancelar.setEnabled(true);
            btnGuardar.setEnabled(true);
        } else if (accion == "edit") {
            action = accion;
            btnCancelar.setEnabled(true);
            btnNuevo.setEnabled(false);
            btnModificar.setEnabled(false);
            btnBorrar.setEnabled(false);
            btnGuardar.setEnabled(true);
        }
    }

    public void BlockButtons() {
        btnCancelar.setEnabled(false);
        btnNuevo.setEnabled(true);
        btnModificar.setEnabled(false);
        btnBorrar.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnSeleccionar.setEnabled(false);
    }

    public void unBlockButtons() {
        btnCancelar.setEnabled(true);
        btnSeleccionar.setEnabled(true);
        btnGuardar.setEnabled(true);
    }

    public void cancel() {
        action = "";
        txtNombre.setEnabled(false);
        BlockButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scpMetodoPago = new javax.swing.JScrollPane();
        tblUnidMed = new javax.swing.JTable();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnSeleccionar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        pnlControl = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Unidades de Medida");
        setResizable(false);

        tblUnidMed = new javax.swing.JTable(){
            public boolean isCellEditable(int r, int c){
                return false;
            }
        };
        tblUnidMed.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tblUnidMed.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre"
            }
        ));
        tblUnidMed.getTableHeader().setReorderingAllowed(false);
        tblUnidMed.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                tblUnidMedAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblUnidMed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUnidMedMouseClicked(evt);
            }
        });
        scpMetodoPago.setViewportView(tblUnidMed);
        if (tblUnidMed.getColumnModel().getColumnCount() > 0) {
            tblUnidMed.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        lblNombre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblNombre.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtNombre.setEnabled(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        btnSeleccionar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.setEnabled(false);
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_add_16px.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_edit_16px.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBorrar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_trash_16px.png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        pnlControl.setBackground(new java.awt.Color(255, 102, 102));
        pnlControl.setOpaque(false);

        btnGuardar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_save_16px.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlControlLayout = new javax.swing.GroupLayout(pnlControl);
        pnlControl.setLayout(pnlControlLayout);
        pnlControlLayout.setHorizontalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlControlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addContainerGap())
        );
        pnlControlLayout.setVerticalGroup(
            pnlControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_multiply_16px.png"))); // NOI18N
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scpMetodoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(pnlControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSeleccionar))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scpMetodoPago, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSeleccionar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        unidMedAction("edit");
        BlockButtons();
        unBlockButtons();

        txtNombre.setEnabled(true);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        try {
            if (tblUnidMed.getSelectedRow() > -1 && tblUnidMed.getSelectedRowCount() == 1) {
                int seleccionado = (int) tblUnidMed.getValueAt(tblUnidMed.getSelectedRow(), 0);
                int seleccion = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro que desea eliminar esta Unidad de Medida?", "input", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (seleccion == JOptionPane.YES_OPTION) {
                    cp.getCs().destroyUnidadDeMedida(seleccionado);
                    JOptionPane.showMessageDialog(rootPane, "La Unidad de Medida se eliminó exitosamente");
                    initState();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Seleccione un elemento de la Tabla");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String nombre = txtNombre.getText();
        switch (action) {
            case "new":
                if (nombre.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "No puede haber campos vacíos", "Advertencia", HEIGHT);
                    txtNombre.requestFocus();
                } else {
                    try {
                        cp.getCs().newUnidMedida(nombre);
                        initState();
                        JOptionPane.showMessageDialog(null, "La Unidad de Medida se registró con éxito ", "¡Éxito!", HEIGHT);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
                break;
            case "edit":
                if (tblUnidMed.getSelectedRow() > -1 && tblUnidMed.getSelectedRowCount() == 1) {
                    int seleccionado = (int) tblUnidMed.getValueAt(tblUnidMed.getSelectedRow(), 0);
                    try {
                        cp.getCs().editUnidadDeMedida(seleccionado, txtNombre.getText());
                        initState();
                        JOptionPane.showMessageDialog(null, "La Unidad de Medida se modificó con éxito");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
                break;
            default:
                break;
        }
        initState();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblUnidMedAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblUnidMedAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tblUnidMedAncestorMoved

    private void tblUnidMedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUnidMedMouseClicked
        if (tblUnidMed.getSelectedRow() > -1 && tblUnidMed.getSelectedRowCount() == 1) {
            int seleccionado = (int) tblUnidMed.getValueAt(tblUnidMed.getSelectedRow(), 0);
            UnidadDeMedida um = this.cp.getCs().findUnidadDeMedida(seleccionado);
            if (um != null) {
                unBlockButtons();
                txtNombre.setEnabled(false);
                btnModificar.setEnabled(true);
                btnBorrar.setEnabled(true);
                txtNombre.setText(um.getNombre());
            } else {
                JOptionPane.showMessageDialog(null, "Error al traer los datos. La Unidad de Medida no existe", "Error", HEIGHT);
            }
        }
    }//GEN-LAST:event_tblUnidMedMouseClicked

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        if (tblUnidMed.getSelectedRow() > -1 && tblUnidMed.getSelectedRowCount() == 1) {
            int seleccionado = (int) tblUnidMed.getValueAt(tblUnidMed.getSelectedRow(), 0);
            UnidadDeMedida um = this.cp.getCs().findUnidadDeMedida(seleccionado);

            if (um != null) {
                UtilVista.cargarCombo(cp.getCs().findAllUnidadDeMedida(), formMaquina.cmbUnidadMedida);
                formMaquina.cmbUnidadMedida.getModel().setSelectedItem(um);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Error al traer los datos");
            }
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        unidMedAction("new");
        BlockButtons();
        unBlockButtons();
        txtNombre.setText("");
        txtNombre.setEnabled(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cancel();
    }//GEN-LAST:event_btnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel pnlControl;
    private javax.swing.JScrollPane scpMetodoPago;
    private javax.swing.JTable tblUnidMed;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
